# Generated by Django 5.1.5 on 2025-02-04 10:48

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "category",
                "ordering": ["id"],
                "get_latest_by": "id",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lat",
                    models.DecimalField(decimal_places=10, max_digits=12, null=True),
                ),
                (
                    "lng",
                    models.DecimalField(decimal_places=10, max_digits=13, null=True),
                ),
                ("region", models.CharField(max_length=255, null=True)),
                ("zone", models.CharField(max_length=255, null=True)),
                ("woreda", models.CharField(max_length=255, null=True)),
                ("kebele", models.CharField(max_length=255, null=True)),
                ("city", models.CharField(max_length=255, null=True)),
                ("sub_city", models.CharField(max_length=255, null=True)),
            ],
            options={
                "db_table": "location",
                "ordering": ["id"],
                "get_latest_by": "id",
            },
        ),
        migrations.CreateModel(
            name="Manufacture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("logo_url", models.URLField(blank=True, null=True)),
                (
                    "manufacturer_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "db_table": "manfacture",
                "ordering": ["id"],
                "get_latest_by": "id",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "barcode",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("is_returnable", models.BooleanField(default=True)),
                ("notify_below", models.IntegerField()),
                ("isvisible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        to="inventory.category",
                    ),
                ),
                (
                    "manufacture",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="manufactures",
                        to="inventory.manufacture",
                    ),
                ),
            ],
            options={
                "db_table": "item",
                "ordering": ["id"],
                "get_latest_by": "id",
            },
        ),
        migrations.CreateModel(
            name="ItemImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_id", models.IntegerField()),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_images",
                        to="inventory.item",
                    ),
                ),
            ],
            options={
                "db_table": "item_image",
                "ordering": ["id"],
                "get_latest_by": "id",
            },
        ),
        migrations.CreateModel(
            name="ReturnRecall",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("P", "Pending"),
                            ("A", "Approved"),
                            ("R", "Rejected"),
                        ],
                        default="P",
                        max_length=1,
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now_add=True)),
                (
                    "item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="items",
                        to="inventory.item",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("business_id", models.IntegerField()),
                ("name", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="inventory.location",
                    ),
                ),
            ],
            options={
                "db_table": "store",
                "ordering": ["id"],
                "get_latest_by": "id",
            },
        ),
        migrations.CreateModel(
            name="Supply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("Piece (pc)", "Piece (pc)"),
                            ("Kilogram(kg)", "Kilogram(kg)"),
                            ("Gram(g)", "Gram(g)"),
                            ("Pound(lb)", "Pound(lb)"),
                            ("Ounce(oz)", "Ounce(oz)"),
                            ("Liter(L)", "Liter(L)"),
                            ("Milliliter(mL)", "Milliliter(mL)"),
                            ("Fluid Ounce (fl oz)", "Fluid Ounce (fl oz)"),
                            ("Gallon(gal)", "Gallon(gal)"),
                            ("Meter (m)", "Meter (m)"),
                            ("Centimeter (cm)", "Centimeter (cm)"),
                            ("Inch (in)", "Inch (in)"),
                            ("Foot (ft)", "Foot (ft)"),
                            ("Square Meter", "Square Meter"),
                            ("Square Foot", "Square Foot"),
                            ("Cubic Meter", "Cubic Meter"),
                            ("Cubic Foot", "Cubic Foot"),
                            ("Dozen (dz)", "Dozen (dz)"),
                            ("Pack (pk)", "Pack (pk)"),
                            ("Set (set)", "Set (set)"),
                        ],
                        max_length=255,
                    ),
                ),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("batch_number", models.CharField(max_length=255, unique=True)),
                ("man_date", models.DateField(blank=True, null=True)),
                ("supplier_id", models.IntegerField()),
                (
                    "item",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_supply",
                        to="inventory.item",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stores",
                        to="inventory.store",
                    ),
                ),
            ],
            options={
                "db_table": "supply",
                "ordering": ["id"],
                "get_latest_by": "id",
            },
        ),
        migrations.CreateModel(
            name="StockMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                ("reason", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                (
                    "from_store",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="outgoing_movements",
                        to="inventory.store",
                    ),
                ),
                (
                    "to_store",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="incoming_movements",
                        to="inventory.store",
                    ),
                ),
                (
                    "supply",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.supply",
                    ),
                ),
            ],
            options={
                "db_table": "stockmovement",
                "ordering": ["id"],
                "get_latest_by": "id",
            },
        ),
    ]
