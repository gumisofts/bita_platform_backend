name: Deploy dev on lambda

on:
  push:
    branches:
      - dev-v01
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python3 -m venv env
          source env/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Copy Environment Variables and Secrets
        run: |
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "DJANGO_DEBUG=${{ vars.DJANGO_DEBUG }}" >> .env
          echo "DJANGO_POSTGRES_USER=${{ secrets.DJANGO_POSTGRES_USER }}" >> .env
          echo "REDIS_HOST=${{ vars.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ vars.REDIS_PORT }}" >> .env
          echo "EMAIL_HOST=${{ vars.EMAIL_HOST }}" >> .env
          echo "EMAIL_PORT=${{ vars.EMAIL_PORT }}" >> .env
          echo "EMAIL_HOST_USER=${{ vars.EMAIL_HOST_USER }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_DEFAULT_REGION=${{vars.AWS_S3_REGION_NAME}}" >> .env
          echo "AWS_STORAGE_BUCKET_NAME=${{vars.AWS_STORAGE_BUCKET_NAME}}" >> .env
          echo "STATIC_URL=${{vars.STATIC_URL}}" >> .env
          echo "ALLOWED_HOSTS=${{vars.ALLOWED_HOSTS}}" >> .env
      - name: Copy AWS Credentials
        run: |
          cd ~/
          mkdir .aws
          cd .aws
          echo "[bita]" >> credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> credentials
          echo "region = ${{ vars.AWS_S3_REGION_NAME }}" >> credentials

      - name: Deploy with Zappa
        run: |
          source env/bin/activate
          zappa deploy dev || zappa update dev
